{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","item","substring","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAiB9C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdnB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,YCPlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,yBAAKC,UAAU,0DACX,yBAAKC,IAAKF,EAAKG,IAAKJ,EAAOE,UAAU,aACrC,yBAAKA,UAAU,aACX,2BAAIF,M,uBCPPK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAS,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAKhB,GACTC,MAAOe,EAAKf,MAAMgB,UAAU,EAAE,IAC9Bf,IAAG,UAAEc,EAAKE,cAAP,aAAE,EAAaC,iBAAiBjB,QATxB,kBAYZY,GAZY,4CAAH,sDCsBLM,EAlBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EAEZrB,mBAAS,CAAE2B,KAAM,GAAIQ,SAAS,IAFlB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAUtC,OAPAC,qBAAU,WACNlB,EAAQC,GAAUkB,MAAK,SAAAC,GACnBH,EAAS,CAAEV,KAAMa,EAAML,SAAS,SAErC,CAACd,IAGGe,EDP2BK,CAAapB,GAAjCW,EAFgB,EAEtBL,KAAcQ,EAFQ,EAERA,QACtB,OACI,oCACI,4BAAKd,GACN,2BAAIc,GAAW,YACd,yBAAKlB,UAAU,kBAEPe,EAAOH,KAAI,SAACa,GACR,OAAO,kBAAC,EAAD,eAAaC,IAAKD,EAAI5B,IAAQ4B,UES9CE,EAnBM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,aAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAGvB,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEQ8C,EAAWhB,KAAI,SAACR,GACZ,OAAO,kBAAC,EAAD,CAASA,SAAWA,EAAUsB,IAAMtB,S,MCTnEyB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.4462ec4c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChanges = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cat => [inputValue, ...cat]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue} onChange={handleInputChanges}\r\n            />\r\n        </form>\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn animate__slow\">\r\n            <img src={url} alt={title} className='card-img' />\r\n            <div className=\"card-body\">\r\n                <p>{title}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Rb8wbCXBdw5ZItHImPzbRy0lCy6aNe6j`;    \r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(item => {\r\n        return {\r\n            id: item.id,\r\n            title: item.title.substring(0,10),\r\n            url: item.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ( {category} ) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n           <p>{loading && 'Cargando'}</p>\r\n            <div className='card-container'>\r\n                {\r\n                    images.map((img) => {\r\n                        return <GifGridItem key={img.id} {...img} />\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({ data: [], loading: true })\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {            \r\n            setState({ data: imgs, loading: false })\r\n        });\r\n    }, [category])\r\n\r\n\r\n    return state\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport  GifGrid  from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['El chavo'])\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />            \r\n                {\r\n                    categories.map((category) => {\r\n                        return <GifGrid category= {category} key= {category}></GifGrid>\r\n                    }) \r\n                }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}